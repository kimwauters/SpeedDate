// Code generated by goa v2.0.0-wip, DO NOT EDIT.
//
// health endpoints
//
// Command:
// $ goa gen github.com/proepkes/speeddate/usersvc/design

package health

import (
	"context"

	goa "goa.design/goa"
)

// Endpoints wraps the "health" service endpoints.
type Endpoints struct {
	Check goa.Endpoint
}

// NewEndpoints wraps the methods of the "health" service with endpoints.
func NewEndpoints(s Service) *Endpoints {
	return &Endpoints{
		Check: NewCheckEndpoint(s),
	}
}

// Use applies the given middleware to all the "health" service endpoints.
func (e *Endpoints) Use(m func(goa.Endpoint) goa.Endpoint) {
	e.Check = m(e.Check)
}

// NewCheckEndpoint returns an endpoint function that calls the method "check"
// of service "health".
func NewCheckEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req interface{}) (interface{}, error) {
		return s.Check(ctx)
	}
}
