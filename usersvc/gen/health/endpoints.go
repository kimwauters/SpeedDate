// Code generated by goa v2.0.0-wip, DO NOT EDIT.
//
// health endpoints
//
// Command:
// $ goa gen github.com/proepkes/speeddate/usersvc/design

package health

import (
	"context"

	goa "goa.design/goa"
)

// Endpoints wraps the "health" service endpoints.
type Endpoints struct {
	CheckHealth goa.Endpoint
}

// NewEndpoints wraps the methods of the "health" service with endpoints.
func NewEndpoints(s Service) *Endpoints {
	return &Endpoints{
		CheckHealth: NewCheckHealthEndpoint(s),
	}
}

// Use applies the given middleware to all the "health" service endpoints.
func (e *Endpoints) Use(m func(goa.Endpoint) goa.Endpoint) {
	e.CheckHealth = m(e.CheckHealth)
}

// NewCheckHealthEndpoint returns an endpoint function that calls the method
// "checkHealth" of service "health".
func NewCheckHealthEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req interface{}) (interface{}, error) {
		return s.CheckHealth(ctx)
	}
}
