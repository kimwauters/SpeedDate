---
# Source: speeddate/templates/speeddate/spawnsvc-conf.yaml
kind: ConfigMap
apiVersion: v1
metadata:
  name: gameserver-config
  namespace: speeddate-system
  labels:
    app: spawnsvc
data:
  GameserverNamespace: "default"
  GameserverNamePrefix: "udp-server"
  PortPolicy: "dynamic"
  ContainerPort: "7777"
  ContainerName: "udp-server"
  ContainerImage: "gcr.io/agones-images/udp-server:0.4"
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: spawnsvc
  namespace: speeddate-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: spawnsvc
  namespace: speeddate-system
rules:
- apiGroups: [""]
  resources: ["configmaps"]
  verbs: ["update", "get", "list"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: spawnsvc-access
  namespace: speeddate-system
subjects:
- kind: User
  name: system:serviceaccount:speeddate-system:spawnsvc
  apiGroup: rbac.authorization.k8s.io
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: spawnsvc

---
# Source: speeddate/templates/speeddate/authsvc-svc.yaml
apiVersion: v1
kind: Service
metadata:
  name: authsvc
  namespace: speeddate-system
  labels:
    app: authsvc
spec:
  ports:
  - port: 8001
    targetPort: 8002
    name: http
  selector:
    app: authsvc

---
# Source: speeddate/templates/speeddate/mmsvc-svc.yaml
apiVersion: v1
kind: Service
metadata:
  name: mmsvc
  namespace: speeddate-system
  labels:
    app: mmsvc
spec:
  ports:
  - port: 8001
    targetPort: 8003
    name: http
  selector:
    app: mmsvc

---
# Source: speeddate/templates/speeddate/spawnsvc-svc.yaml
apiVersion: v1
kind: Service
metadata:
  name: spawnsvc
  namespace: speeddate-system
  labels:
    app: spawnsvc
spec:
  ports:
  - port: 8001
    targetPort: 8001
    name: http
  selector:
    app: spawnsvc

---
# Source: speeddate/templates/speeddate/storagesvc-svc.yaml
apiVersion: v1
kind: Service
metadata:
  name: storagesvc
  namespace: speeddate-system
  labels:
    app: storagesvc
spec:
  ports:
  - port: 8001
    targetPort: 8001
    name: http
  selector:
    app: storagesvc

---
# Source: speeddate/templates/speeddate/ui-svc.yaml
apiVersion: v1
kind: Service
metadata:
  name: speeddateui
  namespace: speeddate-system
  labels:
    app: speeddateui
spec:
  ports:
  - port: 80
    targetPort: 80
    name: http
  selector:
    app: speeddateui

---
# Source: speeddate/templates/speeddate/authsvc-dep.yaml
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: authsvc-v1
  namespace: speeddate-system
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: authsvc
        version: v1
    spec:
      containers:
      - name: authsvc
        image: docker.io/proepkes/authsvc:dev
        imagePullPolicy: Always      
        ports:
        - containerPort: 8002
        livenessProbe:
          httpGet:
            path: /health
            port: 9000
          initialDelaySeconds: 25
          periodSeconds: 25
        resources:
          requests:
            memory: "200Mi"
            cpu: "50m"
          limits:
            memory: "400Mi"
            cpu: "100m"

---
# Source: speeddate/templates/speeddate/mmsvc-dep.yaml
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: mmsvc-v1
  namespace: speeddate-system
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: mmsvc
        version: v1
    spec:
      containers:
      - name: mmsvc
        image: docker.io/proepkes/mmsvc:dev
        imagePullPolicy: Always      
        ports:
        - containerPort: 8003
        livenessProbe:
          httpGet:
            path: /health
            port: 9000
          initialDelaySeconds: 25
          periodSeconds: 25
        resources:
          requests:
            memory: "200Mi"
            cpu: "50m"
          limits:
            memory: "400Mi"
            cpu: "100m"

---
# Source: speeddate/templates/speeddate/spawnsvc-dep.yaml
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: spawnsvc-v1
  namespace: speeddate-system
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: spawnsvc
        version: v1
    spec:
      serviceAccountName: spawnsvc
      containers:
      - name: spawnsvc
        image: docker.io/proepkes/spawnsvc:dev
        imagePullPolicy: Always     
        env:
        - name: GS_NAMESPACE
          value:  
        ports:
        - containerPort: 8001
        livenessProbe:
          httpGet:
            path: /health
            port: 9000
          initialDelaySeconds: 25
          periodSeconds: 25
        resources:
          requests:
            memory: "200Mi"
            cpu: "50m"
          limits:
            memory: "400Mi"
            cpu: "100m"

---
# Source: speeddate/templates/speeddate/storagesvc-dep.yaml
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: storagesvc-v1
  namespace: speeddate-system
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: storagesvc
        version: v1
    spec:
      containers:
      - name: storagesvc
        image: docker.io/proepkes/storagesvc:dev
        imagePullPolicy: Always
        env:
        - name: DB_IP
          value: cockroachdb.external.service
        - name: DB_PORT
          value: "26257"
        - name: DB_USER
          value: speeddateuser
        - name: DB_NAME
          value: speeddate
        - name: DB_PASSWORD
          value: password
        ports:
        - containerPort: 8001
        livenessProbe:
          httpGet:
            path: /health
            port: 9000
          initialDelaySeconds: 25
          periodSeconds: 25
        resources:
          requests:
            memory: "200Mi"
            cpu: "50m"
          limits:
            memory: "400Mi"
            cpu: "100m"

---
# Source: speeddate/templates/speeddate/ui-dep.yaml
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: speeddateui-v1
  namespace: speeddate-system
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: speeddateui
        version: v1
    spec:
      containers:
      - name: speeddateui
        image: docker.io/proepkes/speeddateui:dev
        imagePullPolicy: Always        
        ports:
        - containerPort: 80
        resources:
          requests:
            memory: "200Mi"
            cpu: "50m"
          limits:
            memory: "400Mi"
            cpu: "100m"

---
# Source: speeddate/templates/istio/gateway.yaml
apiVersion: networking.istio.io/v1alpha3
kind: Gateway
metadata:
  name: sd-gateway
spec:
  selector:
    istio: ingressgateway # use istio default controller
  servers:
  #DOC: Ports have to be opened by istio, https://github.com/istio/istio/issues/7242
  - port:
      number: 80
      name: http
      protocol: HTTP
    hosts:
    - speeddate.local
  #TODO: test https https://istio.io/docs/tasks/traffic-management/secure-ingress/
  # - port:
  #     number: 443
  #     name: https
  #     protocol: HTTPS
  #   tls:
  #     mode: SIMPLE
  #     serverCertificate: /etc/istio/ingressgateway-certs/tls.crt
  #     privateKey: /etc/istio/ingressgateway-certs/tls.key
  #   hosts:
  #   - "httpbin.example.com"

---
# Source: speeddate/templates/istio/storagesvc-cockroachdb-se.yaml
apiVersion: networking.istio.io/v1alpha3
kind: ServiceEntry
metadata:
  name: cockroachdb-external
spec:
  hosts:
  - cockroachdb.external.service
  ports:
  - name: tcp
    number: 26257
    protocol: tcp
  location: MESH_EXTERNAL
  resolution: STATIC  
  endpoints:
  - address: 192.168.178.46
    ports:
      tcp: 26257

---
# Source: speeddate/templates/istio/vs.yaml
apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  name: api-vs
spec:
  hosts:
  - speeddate.local
  gateways:
  - sd-gateway
  http:
  - match:
    - uri:
        prefix: "/api/fleet"
    rewrite:
      uri: "/fleet"
    route:
    - destination:
        host: spawnsvc.speeddate-system.svc.cluster.local
  - match:
    - uri:
        prefix: "/api/storage"
    rewrite:
      uri: "/storage"
    route:
    - destination:
        host: storagesvc.speeddate-system.svc.cluster.local
  - match:
    - uri:
        prefix: "/api/auth"
    rewrite:
      uri: "/auth"
    route:
    - destination:
        host: authsvc.speeddate-system.svc.cluster.local    
  - match:
    - uri:
        prefix: /
    route:
    - destination:
        host: speeddateui.speeddate-system.svc.cluster.local
        port:
          number: 80

