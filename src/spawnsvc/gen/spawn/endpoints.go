// Code generated by goa v2.0.0-wip, DO NOT EDIT.
//
// spawn endpoints
//
// Command:
// $ goa gen github.com/proepkes/speeddate/src/spawnsvc/design

package spawn

import (
	"context"

	goa "goa.design/goa"
)

// Endpoints wraps the "spawn" service endpoints.
type Endpoints struct {
	New goa.Endpoint
}

// NewEndpoints wraps the methods of the "spawn" service with endpoints.
func NewEndpoints(s Service) *Endpoints {
	return &Endpoints{
		New: NewNewEndpoint(s),
	}
}

// Use applies the given middleware to all the "spawn" service endpoints.
func (e *Endpoints) Use(m func(goa.Endpoint) goa.Endpoint) {
	e.New = m(e.New)
}

// NewNewEndpoint returns an endpoint function that calls the method "new" of
// service "spawn".
func NewNewEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req interface{}) (interface{}, error) {
		return s.New(ctx)
	}
}
