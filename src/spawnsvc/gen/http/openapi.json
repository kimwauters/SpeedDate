{"swagger":"2.0","info":{"title":"Speeddate Spawnerservice","description":"HTTP service for managing game-instances","version":""},"host":":8001","consumes":["application/json","application/xml","application/gob"],"produces":["application/json","application/xml","application/gob"],"paths":{"/fleet/add":{"post":{"tags":["fleet"],"summary":"add fleet","description":"Add a new gameserver.","operationId":"fleet#add","responses":{"201":{"description":"Created response.","schema":{"type":"string"}}},"schemes":["http"]}},"/fleet/clear":{"post":{"tags":["fleet"],"summary":"clear fleet","description":"Removes all gameserver pods.","operationId":"fleet#clear","responses":{"200":{"description":"OK response.","schema":{"type":"string"}}},"schemes":["http"]}},"/fleet/configuration":{"get":{"tags":["fleet"],"summary":"configuration fleet","description":"Get gameserver deployment configuration.","operationId":"fleet#configuration","responses":{"200":{"description":"OK response.","schema":{"$ref":"#/definitions/ConfigurationResponseBody","required":["Namespace","NamePrefix","PortPolicy","ContainerName","ContainerImage","ContainerPort"]}}},"schemes":["http"]}},"/fleet/configure":{"post":{"tags":["fleet"],"summary":"configure fleet","description":"Configure gameserver deployment.","operationId":"fleet#configure","parameters":[{"name":"ConfigureRequestBody","in":"body","required":true,"schema":{"$ref":"#/definitions/FleetConfigureRequestBody","required":["Namespace","NamePrefix","PortPolicy","ContainerName","ContainerImage","ContainerPort"]}}],"responses":{"200":{"description":"OK response.","schema":{"type":"string"}}},"schemes":["http"]}},"/swagger/swagger.json":{"get":{"summary":"Download ../../gen/http/openapi.json","description":"JSON document containing the API swagger definition","operationId":"swagger#/swagger/swagger.json","responses":{"200":{"description":"File downloaded","schema":{"type":"file"}}},"schemes":["http"]}}},"definitions":{"ConfigurationResponseBody":{"title":"ConfigurationResponseBody","type":"object","properties":{"ContainerImage":{"type":"string","description":"Image of the gameserver","example":"gcr.io/agones-images/udp-server:0.4"},"ContainerName":{"type":"string","description":"Name of the gameserver-container","example":"my-server"},"ContainerPort":{"type":"string","description":"Exposed port of the gameserver","example":"7777"},"NamePrefix":{"type":"string","description":"Prefix for the generated pod-name","example":"my-server","maxLength":100},"Namespace":{"type":"string","description":"Namespace where the gameserver will run in","example":"speeddate-system","maxLength":100},"PortPolicy":{"type":"string","description":"Portpolicy either dynamic or static","example":"dynamic"}},"example":{"ContainerImage":"gcr.io/agones-images/udp-server:0.4","ContainerName":"my-server","ContainerPort":"7777","NamePrefix":"my-server","Namespace":"speeddate-system","PortPolicy":"dynamic"},"required":["Namespace","NamePrefix","PortPolicy","ContainerName","ContainerImage","ContainerPort"]},"FleetConfigureRequestBody":{"title":"FleetConfigureRequestBody","type":"object","properties":{"ContainerImage":{"type":"string","description":"Image of the gameserver","example":"gcr.io/agones-images/udp-server:0.4"},"ContainerName":{"type":"string","description":"Name of the gameserver-container","example":"my-server"},"ContainerPort":{"type":"string","description":"Exposed port of the gameserver","example":"7777"},"NamePrefix":{"type":"string","description":"Prefix for the generated pod-name","example":"my-server","maxLength":100},"Namespace":{"type":"string","description":"Namespace where the gameserver will run in","example":"speeddate-system","maxLength":100},"PortPolicy":{"type":"string","description":"Portpolicy either dynamic or static","example":"dynamic"}},"example":{"ContainerImage":"gcr.io/agones-images/udp-server:0.4","ContainerName":"my-server","ContainerPort":"7777","NamePrefix":"my-server","Namespace":"speeddate-system","PortPolicy":"dynamic"},"required":["Namespace","NamePrefix","PortPolicy","ContainerName","ContainerImage","ContainerPort"]}},"securityDefinitions":{"jwt":{"type":"apiKey","description":"Secures endpoint by requiring a valid JWT token retrieved via the signin endpoint. Supports scopes \"api:read\" and \"api:write\".\n**Security Scopes**:\n  * `api:read`: Read-only access\n  * `api:write`: Read and write access","name":"Authorization","in":"header"}}}