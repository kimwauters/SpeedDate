// Code generated by goa v2.0.0-wip, DO NOT EDIT.
//
// fleet endpoints
//
// Command:
// $ goa gen github.com/proepkes/speeddate/src/spawnsvc/design

package fleet

import (
	"context"

	goa "goa.design/goa"
)

// Endpoints wraps the "fleet" service endpoints.
type Endpoints struct {
	Add           goa.Endpoint
	Create        goa.Endpoint
	Delete        goa.Endpoint
	List          goa.Endpoint
	Clear         goa.Endpoint
	Configuration goa.Endpoint
	Configure     goa.Endpoint
}

// NewEndpoints wraps the methods of the "fleet" service with endpoints.
func NewEndpoints(s Service) *Endpoints {
	return &Endpoints{
		Add:           NewAddEndpoint(s),
		Create:        NewCreateEndpoint(s),
		Delete:        NewDeleteEndpoint(s),
		List:          NewListEndpoint(s),
		Clear:         NewClearEndpoint(s),
		Configuration: NewConfigurationEndpoint(s),
		Configure:     NewConfigureEndpoint(s),
	}
}

// Use applies the given middleware to all the "fleet" service endpoints.
func (e *Endpoints) Use(m func(goa.Endpoint) goa.Endpoint) {
	e.Add = m(e.Add)
	e.Create = m(e.Create)
	e.Delete = m(e.Delete)
	e.List = m(e.List)
	e.Clear = m(e.Clear)
	e.Configuration = m(e.Configuration)
	e.Configure = m(e.Configure)
}

// NewAddEndpoint returns an endpoint function that calls the method "add" of
// service "fleet".
func NewAddEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req interface{}) (interface{}, error) {
		return s.Add(ctx)
	}
}

// NewCreateEndpoint returns an endpoint function that calls the method
// "create" of service "fleet".
func NewCreateEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req interface{}) (interface{}, error) {
		p := req.(*Fleet)
		return s.Create(ctx, p)
	}
}

// NewDeleteEndpoint returns an endpoint function that calls the method
// "delete" of service "fleet".
func NewDeleteEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req interface{}) (interface{}, error) {
		p := req.(*DeletePayload)
		return nil, s.Delete(ctx, p)
	}
}

// NewListEndpoint returns an endpoint function that calls the method "list" of
// service "fleet".
func NewListEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req interface{}) (interface{}, error) {
		p := req.(*ListPayload)
		res, err := s.List(ctx, p)
		if err != nil {
			return nil, err
		}
		vres := NewViewedStoredFleetCollection(res, "default")
		return vres, nil
	}
}

// NewClearEndpoint returns an endpoint function that calls the method "clear"
// of service "fleet".
func NewClearEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req interface{}) (interface{}, error) {
		return s.Clear(ctx)
	}
}

// NewConfigurationEndpoint returns an endpoint function that calls the method
// "configuration" of service "fleet".
func NewConfigurationEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req interface{}) (interface{}, error) {
		return s.Configuration(ctx)
	}
}

// NewConfigureEndpoint returns an endpoint function that calls the method
// "configure" of service "fleet".
func NewConfigureEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req interface{}) (interface{}, error) {
		p := req.(*ConfigurePayload)
		return s.Configure(ctx, p)
	}
}
