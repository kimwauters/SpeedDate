{"swagger":"2.0","info":{"title":"Speeddate Userservice","description":"HTTP service for managing users in the SpeedDate-system","version":""},"host":":8001","consumes":["application/json","application/xml","application/gob"],"produces":["application/json","application/xml","application/gob"],"paths":{"/storage/auth/delete/{id}":{"delete":{"tags":["authstorage"],"summary":"delete authstorage","description":"Remove user from storage","operationId":"authstorage#delete","parameters":[{"name":"id","in":"path","description":"ID of user to remove","required":true,"type":"string"}],"responses":{"204":{"description":"No Content response."}},"schemes":["http"]}},"/storage/auth/get/{id}":{"get":{"tags":["authstorage"],"summary":"get authstorage","description":"\nRequired security scopes:\n  * `api:read`","operationId":"authstorage#get","parameters":[{"name":"view","in":"query","description":"View to render","required":false,"type":"string","enum":["default","tiny"]},{"name":"id","in":"path","description":"Get user by ID","required":true,"type":"string"},{"name":"Authorization","in":"header","description":"JWT used for authentication","required":false,"type":"string"}],"responses":{"200":{"description":"OK response.","schema":{"$ref":"#/definitions/AuthstorageGetResponseBody"}},"401":{"description":"Unauthorized response.","schema":{"$ref":"#/definitions/AuthstorageGetUnauthorizedResponseBody"}},"404":{"description":"Not Found response.","schema":{"$ref":"#/definitions/AuthstorageGetNotFoundResponseBody"}}},"schemes":["http"],"security":[{"jwt":[]}]}},"/storage/auth/insert":{"post":{"tags":["authstorage"],"summary":"insert authstorage","description":"Add new user and return its ID.","operationId":"authstorage#insert","parameters":[{"name":"InsertRequestBody","in":"body","required":true,"schema":{"$ref":"#/definitions/AuthstorageInsertRequestBody","required":["name"]}}],"responses":{"201":{"description":"Created response.","schema":{"type":"string"}}},"schemes":["http"]}},"/swagger/swagger.json":{"get":{"summary":"Download ../../gen/http/openapi.json","description":"JSON document containing the API swagger definition","operationId":"swagger#/swagger/swagger.json","responses":{"200":{"description":"File downloaded","schema":{"type":"file"}}},"schemes":["http"]}}},"definitions":{"AuthstorageGetNotFoundResponseBody":{"title":"Mediatype identifier: application/vnd.goa.error; view=default","type":"object","properties":{"fault":{"type":"boolean","description":"Is the error a server-side fault?","example":true},"id":{"type":"string","description":"ID is a unique identifier for this particular occurrence of the problem.","example":"123abc"},"message":{"type":"string","description":"Message is a human-readable explanation specific to this occurrence of the problem.","example":"parameter 'p' must be an integer"},"name":{"type":"string","description":"Name is the name of this class of errors.","example":"bad_request"},"temporary":{"type":"boolean","description":"Is the error temporary?","example":true},"timeout":{"type":"boolean","description":"Is the error a timeout?","example":true}},"description":"GetNotFoundResponseBody result type (default view)","example":{"fault":true,"id":"123abc","message":"parameter 'p' must be an integer","name":"bad_request","temporary":false,"timeout":false},"required":["name","id","message","temporary","timeout","fault"]},"AuthstorageGetResponseBody":{"title":"Mediatype identifier: application/sd.data.stored-authuser; view=default","type":"object","properties":{"id":{"type":"string","description":"UUID is the unique id of the user.","example":"f923e008-e511-11e8-9f32-f2801f1b9fd1"},"name":{"type":"string","description":"The username","example":"nyk","maxLength":50},"online":{"type":"boolean","description":"Indicates whether the user is currently online.","example":true}},"description":"GetResponseBody result type (default view)","example":{"id":"f923e008-e511-11e8-9f32-f2801f1b9fd1","name":"8fh","online":true},"required":["id","name"]},"AuthstorageGetUnauthorizedResponseBody":{"title":"Mediatype identifier: application/vnd.goa.error; view=default","type":"object","properties":{"fault":{"type":"boolean","description":"Is the error a server-side fault?","example":true},"id":{"type":"string","description":"ID is a unique identifier for this particular occurrence of the problem.","example":"123abc"},"message":{"type":"string","description":"Message is a human-readable explanation specific to this occurrence of the problem.","example":"parameter 'p' must be an integer"},"name":{"type":"string","description":"Name is the name of this class of errors.","example":"bad_request"},"temporary":{"type":"boolean","description":"Is the error temporary?","example":true},"timeout":{"type":"boolean","description":"Is the error a timeout?","example":true}},"description":"GetUnauthorizedResponseBody result type (default view)","example":{"fault":true,"id":"123abc","message":"parameter 'p' must be an integer","name":"bad_request","temporary":false,"timeout":true},"required":["name","id","message","temporary","timeout","fault"]},"AuthstorageInsertRequestBody":{"title":"AuthstorageInsertRequestBody","type":"object","properties":{"name":{"type":"string","description":"The username","example":"g6b","maxLength":50}},"example":{"name":"fg6"},"required":["name"]}},"securityDefinitions":{"jwt":{"type":"apiKey","description":"Secures endpoint by requiring a valid JWT token retrieved via the signin endpoint. Supports scopes \"api:read\" and \"api:write\".\n**Security Scopes**:\n  * `api:read`: Read-only access\n  * `api:write`: Read and write access","name":"Authorization","in":"header"}}}